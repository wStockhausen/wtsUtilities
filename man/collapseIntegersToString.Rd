% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collectValuesByGroup.R
\name{collapseIntegersToString}
\alias{collapseIntegersToString}
\title{Collapse a vector of integers to a more-compact string representation}
\usage{
collapseIntegersToString(v)
}
\arguments{
\item{v}{\itemize{
\item vector of integers (or list consisting of a single vector of integers)
}}
}
\value{
a string representation of the vector
}
\description{
Function to collapse a vector of integers to a more-compact string representation.
}
\details{
If \code{v} is equal to c(x:y,z,...), where \code{x}, \code{y}, and \code{z} are integers, and \code{...} is constructed of integers,
then the returned string from \code{collapseIntegersToString(v)} would be x:y,z,..., where
\code{x}, \code{y}, \code{z} and \code{...} are now character equivalents to the original values.

NOTE: this function is not vectorized. To use it with a tibble list column, use \code{\link[dplyr:rowwise]{dplyr::rowwise()}}.
}
\examples{
# example code
v = c(1:3,10,21:24,5);
s = collapseIntegersToString(v);

Also, `v` can be recovered by
v = eval(parse(text=paste0("c(",s,")")));

lv = dplyr::bind_rows(tibble::tibble(v=list(v)), tibble::tibble(v=list(c(v,5))));
lv = lv |> dplyr::rowwise() |> dplyr::mutate(s=collapseIntegersToString(v),.before=1);

}
